-- 7 Billion Humans (2059) --
-- 52: The Mode Code --

pickup s
if w == nothing or
 e == nothing:
	step n
	if se == worker:
		step nw
		mem2 = set 3
	else:
		step ne
		write 5
		mem2 = set 2
	endif
else:
	if w == nothing or
	 e == nothing:
		step n
		if se == worker:
			step w
			step nw
			write 1
			mem2 = set 4
		else:
			step e
			step ne
			write 4
			mem2 = set 1
		endif
	else:
		if ne == nothing:
			write 2
			mem2 = set 5
			step w
			step w
			step nw
		else:
			write 3
			step e
			step e
			step ne
		endif
		step n
	endif
endif
a:
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step e
else:
	step w
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step e
else:
	step w
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step e
else:
	step w
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step ne
else:
	step nw
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step e
else:
	step w
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step e
else:
	step w
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step e
else:
	step w
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
step n
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step w
else:
	step e
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step w
else:
	step e
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step w
else:
	step e
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step nw
else:
	step ne
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step w
else:
	step e
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step w
else:
	step e
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if myitem < 3:
	step w
else:
	step e
endif
mem1 = nearest datacube
if mem1 == myitem or
 mem1 == mem2:
	if mem1 == myitem:
		mem3 = calc mem3 + 1
	else:
		mem4 = calc mem4 + 1
	endif
endif
if n == datacube:
	step n
	jump a
endif
b:
step s
step s
step s
step s
step s
if s != wall:
	jump b
endif
if myitem < 3:
	step e
	if myitem > 0:
		step e
		if myitem > 1:
			step e
		endif
	endif
else:
	step w
	if myitem < 5:
		step w
		if myitem < 4:
			step w
		endif
	endif
endif
write mem3
drop
if mem2 > 2:
	step e
	step e
	step ne
else:
	step w
	step w
	step nw
endif
c:
if s != datacube:
	jump c
endif
pickup s
mem1 = calc myitem + mem4
write mem1
step s
drop

