-- 7 Billion Humans (2199) --
-- 62: The Sorting Floor --

jump a
mem1 = foreachdir e:
	a:
	if mem1 == hole:
		mem1 = set c
		mem1 = set c
		b:
		tell everyone hi
		mem1 = set c
		mem1 = set c
		mem1 = set c
		tell everyone hi
		mem1 = set c
		mem1 = set c
		mem1 = set c
		tell everyone hi
		mem1 = set c
		mem1 = set c
		mem1 = set c
		tell everyone hi
		mem1 = calc [blank] + [blank]
		step n
		step sw
		step e
		mem1 = set myitem
		mem1 = set myitem
		mem1 = set myitem
		mem1 = set myitem
		mem1 = set myitem
		mem1 = set myitem
		mem1 = set myitem
		jump b
	endif
endfor
step n
step n
pickup n
step n
c:
listenfor hi
jump d
mem1 = foreachdir s:
	mem2 = foreachdir e:
		d:
		jump e
	endfor
endfor
e:
if mem1 == worker:
	if mem2 == worker:
		jump f
		mem1 = foreachdir e:
			mem2 = foreachdir s:
				mem3 = foreachdir se:
					f:
					jump g
				endfor
			endfor
		endfor
		g:
		if mem1 < myitem:
			if mem2 < myitem or
			 mem3 < myitem:
				if mem2 < myitem or
				 mem2 == myitem and
				 mem3 < myitem:
					step se
				else:
					step s
				endif
			else:
				step e
			endif
		else:
			if mem1 == myitem:
				if mem2 > myitem and
				 mem3 < myitem or
				 mem2 < myitem:
					step s
				else:
					if mem2 == myitem and
					 mem3 < myitem:
						step se
					endif
				endif
			else:
				if mem2 < myitem or
				 mem3 < myitem:
					if mem2 < myitem and
					 mem3 < myitem:
						step s
					else:
						step e
					endif
				endif
			endif
		endif
	else:
		jump h
		mem1 = foreachdir w:
			mem2 = foreachdir s:
				mem3 = foreachdir sw:
					h:
					jump i
				endfor
			endfor
		endfor
		i:
		if mem1 < myitem:
			if mem2 < myitem or
			 mem3 < myitem:
				if mem3 < myitem or
				 mem3 == myitem and
				 mem2 < myitem:
					step s
				else:
					step sw
				endif
			endif
		else:
			if mem1 == myitem:
				if mem3 != myitem and
				 mem2 < myitem:
					if mem3 < myitem:
						step s
					endif
				endif
			else:
				if mem2 == myitem or
				 mem2 > myitem and
				 mem3 > myitem:
					step w
				else:
					if mem2 < myitem and
					 mem3 < myitem:
						step sw
					endif
				endif
			endif
		endif
	endif
else:
	if mem2 == worker:
		jump j
		mem1 = foreachdir e:
			mem2 = foreachdir n:
				mem3 = foreachdir ne:
					j:
					jump k
				endfor
			endfor
		endfor
		k:
		if mem1 < myitem:
			if mem2 < myitem and
			 mem3 < myitem:
				step e
			else:
				if mem2 > myitem and
				 mem3 > myitem:
					step ne
				endif
			endif
		else:
			if mem1 == myitem:
				if mem2 > myitem and
				 mem3 > myitem:
					step n
				endif
			else:
				if mem2 > myitem or
				 mem3 > myitem:
					if mem3 == myitem or
					 mem3 > myitem and
					 mem2 > myitem:
						step n
					else:
						step ne
					endif
				endif
			endif
		endif
	else:
		jump l
		mem1 = foreachdir w:
			mem2 = foreachdir n:
				mem3 = foreachdir nw:
					l:
					jump m
				endfor
			endfor
		endfor
		m:
		if mem1 < myitem:
			if mem2 > myitem or
			 mem3 > myitem:
				if mem2 > myitem and
				 mem3 > myitem:
					step n
				else:
					step w
				endif
			endif
		else:
			if mem1 == myitem:
				if mem2 > myitem or
				 mem3 > myitem:
					if mem2 == myitem and
					 mem3 > myitem:
						step nw
					else:
						step n
					endif
				endif
			else:
				if mem2 > myitem or
				 mem3 > myitem:
					if mem2 > myitem and
					 mem3 > myitem:
						step nw
					else:
						step n
					endif
				else:
					step w
				endif
			endif
		endif
	endif
endif
drop
if mem4 == 0 or
 mem4 == 1:
	if mem4 == 0:
		pickup ne
		step ne
		mem4 = set 1
	else:
		pickup s
		step s
		mem4 = set 2
	endif
else:
	if mem4 == 2:
		pickup nw
		step nw
		mem4 = set 3
	else:
		jump n
		mem1 = foreachdir sw:
			n:
			step e
			if mem1 == hole:
				jump o
				mem1 = foreachdir sw:
					mem2 = foreachdir e:
						o:
						if mem1 < mem2:
							pickup sw
							step e
							drop
						endif
						pickup sw
					endfor
				endfor
			else:
				mem2 = nearest datacube
				if mem1 < mem2:
					pickup c
					step w
				else:
					pickup sw
				endif
			endif
		endfor
		step sw
		mem4 = set 0
	endif
endif
jump c

