-- 7 Billion Humans (2144) --
-- 62: The Sorting Floor --

step n
step n
step n
pickup n
step s
step s
drop
if n == worker or
 nw == worker:
	step n
	pickup n
	step s
	step s
	drop
	step s
else:
	if w == worker:
		step ne
		step n
		pickup n
		step s
		step s
		drop
		step sw
		mem1 = set c
		jump a
		mem2 = foreachdir nw,w,sw,n,s,ne,e,se:
			a:
			if mem1 == nothing or
			 mem2 > mem1:
				mem1 = set mem2
			endif
		endfor
		pickup mem1
		b:
		if e != hole:
			step e
			jump b
		endif
		c:
		step n
		if c == datacube or
		 w == datacube:
			jump c
		endif
		drop
		mem4 = set c
		step s
		step sw
		mem1 = nearest datacube
		jump d
		mem2 = foreachdir nw,w,sw,n,s,ne,e,se:
			d:
			if mem1 == nothing or
			 mem2 > mem1:
				mem1 = set mem2
			endif
		endfor
		pickup mem1
		step mem4
		step w
		drop
		mem4 = set c
		step s
		step s
		mem1 = nearest datacube
		jump e
		mem2 = foreachdir nw,w,sw,n,s,ne,e,se:
			e:
			if mem1 == nothing or
			 mem2 > mem1:
				mem1 = set mem2
			endif
		endfor
		pickup mem1
		step mem4
		step w
		drop
		step s
		step se
		mem1 = nearest datacube
		jump f
		mem2 = foreachdir nw,w,sw,n,s,ne,e,se:
			f:
			if mem1 == nothing or
			 mem2 > mem1:
				mem1 = set mem2
			endif
		endfor
		pickup mem1
		step mem4
		step ne
		drop
		step sw
		mem4 = nearest datacube
		step s
		step s
		mem1 = nearest datacube
		jump g
		mem2 = foreachdir nw,w,sw,n,s,ne,e,se:
			g:
			if mem1 == nothing or
			 mem2 > mem1:
				mem1 = set mem2
			endif
		endfor
		mem3 = nearest worker
		if mem3 >= 0:
			jump h
		endif
		pickup mem1
		step mem4
		step n
		drop
		h:
	else:
		step ne
		step w
		step se
		step s
		mem1 = set c
		jump i
		mem2 = foreachdir nw,w,sw,n,s,ne,e,se:
			i:
			if mem1 == nothing or
			 mem2 < mem1:
				mem1 = set mem2
			endif
		endfor
		pickup mem1
		j:
		jump k
		mem2 = foreachdir nw:
			k:
			if mem2 != hole:
				step nw
				jump j
			endif
		endfor
		l:
		jump m
		mem2 = foreachdir n:
			m:
			if mem2 != hole:
				step n
				jump l
			endif
		endfor
		drop
		mem4 = set c
		step s
		step s
		step s
		step se
		mem1 = set c
		jump n
		mem2 = foreachdir nw,w,sw,n,s,ne,e,se:
			n:
			if mem1 == nothing or
			 mem2 < mem1:
				mem1 = set mem2
			endif
		endfor
		pickup mem1
		step mem4
		step e
		drop
		mem4 = set c
		step s
		step s
		step s
		step s
		mem1 = nearest datacube
		jump o
		mem2 = foreachdir nw,w,sw,n,s,ne,e,se:
			o:
			if mem1 == nothing or
			 mem2 < mem1:
				mem1 = set mem2
			endif
		endfor
		pickup mem1
		step mem4
		step e
		drop
		step s
		step sw
		step s
		step s
		mem1 = nearest datacube
		jump p
		mem2 = foreachdir nw,w,sw,n,s,ne,e,se:
			p:
			if mem1 == nothing or
			 mem2 < mem1:
				mem1 = set mem2
			endif
		endfor
		pickup mem1
		step mem4
		step sw
		drop
		step se
		mem4 = nearest datacube
		step s
		step s
		mem1 = nearest datacube
		jump q
		mem2 = foreachdir nw,w,sw,n,s,ne,e,se:
			q:
			if mem1 == nothing or
			 mem2 < mem1:
				mem1 = set mem2
			endif
		endfor
		mem3 = nearest worker
		if mem3 >= 0:
			jump r
		endif
		pickup mem1
		step mem4
		step n
		drop
	endif
endif
r:
